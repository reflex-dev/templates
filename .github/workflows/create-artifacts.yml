name: Upload Directories to R2
on:
  release:
    types: [published]
jobs:
  list-directories:
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.list_dirs.outputs.directories }}
    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: List directories
        id: list_dirs
        run: |
          directories=$(find . -mindepth 1 -maxdepth 1 -type d | sed 's|^./||' | jq -R . | jq -s . | tr -d '\n' | tr -d ' ')
          echo "directories=$directories" >> $GITHUB_OUTPUT
        shell: bash

  upload-to-r2:
    needs: list-directories
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.list-directories.outputs.directories) }}
    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY_DEV }}
          aws-region: auto
      - name: Upload directory to R2
        run: |
          # Create a temporary directory with the project structure
          mkdir -p temp_upload/templates/${{ matrix.directory }}
          cp -r ./${{ matrix.directory }}/* temp_upload/templates/${{ matrix.directory }}/
          # Upload the structured directory to R2
          aws s3 sync temp_upload/ s3://${{ secrets.R2_BUCKET_NAME_DEV }}/ --endpoint-url ${{ secrets.R2_ENDPOINT_URL_DEV }}
          # Clean up
          rm -rf temp_upload
        shell: bash

  upload-templates-json:
    needs: upload-to-r2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY_DEV }}
          aws-region: auto
      - name: Upload templates.json to R2
        run: |
          aws s3 cp ./templates.json s3://${{ secrets.R2_BUCKET_NAME_DEV }}/templates/templates.json --endpoint-url ${{ secrets.R2_ENDPOINT_URL_DEV }}
        shell: bash
      - name: Upload templates.json as release asset (for backward compatibility)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./templates.json
          asset_name: templates.json
          asset_content_type: application/json
